# Data filtering functions demonstration in DataCode
# This example shows all new filtering and query capabilities

print("Data Filtering Functions Demo - DataCode")
print("=" * 50)

# Create test table with employee data
global employees_data = []
global employees_data = push(employees_data, [1, 'Alice Johnson', 28, 75000, 'Engineering', true, '2020-01-15'])
global employees_data = push(employees_data, [2, 'Bob Smith', 35, 82000, 'Marketing', true, '2019-03-22'])
global employees_data = push(employees_data, [3, 'Charlie Brown', 42, 68000, 'Engineering', false, '2018-07-10'])
global employees_data = push(employees_data, [4, 'Diana Prince', 29, 71500, 'HR', true, '2021-05-08'])
global employees_data = push(employees_data, [5, 'Eve Wilson', 31, 89000, 'Marketing', true, '2020-11-30'])
global employees_data = push(employees_data, [6, 'Frank Miller', 45, 105000, 'Engineering', true, '2017-02-14'])
global employees_data = push(employees_data, [7, 'Grace Lee', 26, 58000, 'HR', false, '2022-01-20'])
global employees_data = push(employees_data, [8, 'Henry Davis', 38, 92000, 'Marketing', true, '2019-09-05'])

global headers = ['id', 'name', 'age', 'salary', 'department', 'active', 'hire_date']
global employees = table(employees_data, headers)

print("Original employee table:")
show_table(employees)
print("")

# ========== 1. BASIC FILTERING with table_where ==========
print("1. Basic filtering with table_where")
print("-" * 40)

# Filter Engineering department employees
global engineering = table_where(employees, 'department', '=', 'Engineering')
print("Engineering department employees:")
show_table(engineering)
print("")

# Filter employees with salary > 80000
global high_salary = table_where(employees, 'salary', '>', 80000)
print("Employees with salary > 80,000:")
show_table(high_salary)
print("")

# Filter active employees
global active_employees = table_where(employees, 'active', '=', true)
print("Active employees:")
show_table(active_employees)
print("")

# ========== 2. –§–ò–õ–¨–¢–†–ê–¶–ò–Ø –ü–û –î–ò–ê–ü–ê–ó–û–ù–£ table_between ==========
print("üîç 2. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É —Å table_between")
print("-" * 40)

# –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ –æ—Ç 30 –¥–æ 40 –ª–µ—Ç
global middle_age = table_between(employees, 'age', 30, 40)
print("üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ 30-40 –ª–µ—Ç:")
show_table(middle_age)
print("")

# –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –æ—Ç 70000 –¥–æ 90000
global mid_salary = table_between(employees, 'salary', 70000, 90000)
print("üíº –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π 70k-90k:")
show_table(mid_salary)
print("")

# ========== 3. –§–ò–õ–¨–¢–†–ê–¶–ò–Ø –ü–û –°–ü–ò–°–ö–£ table_in ==========
print("üîç 3. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ø–∏—Å–∫—É –∑–Ω–∞—á–µ–Ω–∏–π —Å table_in")
print("-" * 40)

# –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤
global tech_depts = table_in(employees, 'department', ['Engineering', 'Marketing'])
print("üè¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏–∑ Engineering –∏ Marketing:")
show_table(tech_depts)
print("")

# –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
global specific_ages = table_in(employees, 'age', [28, 35, 42])
print("üéÇ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞ 28, 35 –∏–ª–∏ 42 –≥–æ–¥–∞:")
show_table(specific_ages)
print("")

# ========== 4. –£–ù–ò–ö–ê–õ–¨–ù–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø table_distinct ==========
print("üîç 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å table_distinct")
print("-" * 40)

# –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ—Ç–¥–µ–ª—ã
global departments = table_distinct(employees, 'department')
print("üè¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ—Ç–¥–µ–ª—ã:")
for dept in departments do
    print("  ‚Ä¢ " + dept)
endfor
print("")

# –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
global statuses = table_distinct(employees, 'active')
print("üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:")
for status in statuses do
    print("  ‚Ä¢ " + status)
endfor
print("")

# ========== 5. –°–õ–£–ß–ê–ô–ù–ê–Ø –í–´–ë–û–†–ö–ê table_sample ==========
print("üîç 5. –°–ª—É—á–∞–π–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ —Å table_sample")
print("-" * 40)

# –°–ª—É—á–∞–π–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ –∏–∑ 3 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
global sample_3 = table_sample(employees, 3)
print("üé≤ –°–ª—É—á–∞–π–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ –∏–∑ 3 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
show_table(sample_3)
print("")

# –°–ª—É—á–∞–π–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ –∏–∑ 5 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
global sample_5 = table_sample(employees, 5)
print("üé≤ –°–ª—É—á–∞–π–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ –∏–∑ 5 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
show_table(sample_5)
print("")

# ========== 6. –ö–û–ú–ë–ò–ù–ò–†–û–í–ê–ù–ù–ê–Ø –§–ò–õ–¨–¢–†–ê–¶–ò–Ø ==========
print("üîç 6. –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è")
print("-" * 40)

# –°–Ω–∞—á–∞–ª–∞ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
global active = table_where(employees, 'active', '=', true)
# –ó–∞—Ç–µ–º –∏–∑ –Ω–∏—Ö –≤—ã–±–∏—Ä–∞–µ–º —Å –≤—ã—Å–æ–∫–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π
global active_high_salary = table_where(active, 'salary', '>', 75000)
# –ò –Ω–∞–∫–æ–Ω–µ—Ü –∏–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤
global final_filter = table_in(active_high_salary, 'department', ['Engineering', 'Marketing'])

print("üéØ –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π > 75k –∏–∑ Engineering/Marketing:")
show_table(final_filter)
print("")

# ========== 7. –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –§–ò–õ–¨–¢–†–û–í–ê–ù–ù–´–ú –î–ê–ù–ù–´–ú ==========
print("üîç 7. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º")
print("-" * 40)

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–∞–º –≤ Engineering
global eng_salaries = table_select(engineering, ['salary'])
global eng_salary_array = []
for row in eng_salaries['rows'] do
    global eng_salary_array = push(eng_salary_array, row[0])
endfor

print("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—Ä–ø–ª–∞—Ç –≤ Engineering:")
print("  ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞: " + average(eng_salary_array))
print("  ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: " + min(eng_salary_array))
print("  ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: " + max(eng_salary_array))
print("  ‚Ä¢ –û–±—â–∞—è —Å—É–º–º–∞: " + sum(eng_salary_array))
print("")

# ========== 8. –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –û–ü–ï–†–ê–¢–û–†–û–í ==========
print("üîç 8. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤")
print("-" * 40)

# –ù–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ
global not_hr = table_where(employees, 'department', '!=', 'HR')
print("üö´ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ù–ï –∏–∑ HR (" + length(not_hr['rows']) + " —á–µ–ª–æ–≤–µ–∫)")

# –ú–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ
global young = table_where(employees, 'age', '<=', 30)
print("üë∂ –ú–æ–ª–æ–¥—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ (‚â§30 –ª–µ—Ç): " + length(young['rows']) + " —á–µ–ª–æ–≤–µ–∫")

# –ë–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ
global experienced = table_where(employees, 'age', '>=', 35)
print("üë¥ –û–ø—ã—Ç–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ (‚â•35 –ª–µ—Ç): " + length(experienced['rows']) + " —á–µ–ª–æ–≤–µ–∫")

print("")
print("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
print("üöÄ DataCode —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö!")
