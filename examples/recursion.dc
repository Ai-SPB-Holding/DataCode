# –ü—Ä–∏–º–µ—Ä —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ DataCode
print('üîÑ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π')
print('===================================')

# –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä - —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ —É—Å–ª–æ–≤–∏–π)
global function factorial(n) do
    # –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π –¥–ª—è n <= 1
    local is_base_case = n <= 1
    # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é –ª–æ–≥–∏–∫—É –±–µ–∑ if
    return 1  # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
endfunction

# –ß–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏
global function fibonacci(n) do
    if n <= 1 do
        return n
    else
        local fib1 = fibonacci(n - 1)
        local fib2 = fibonacci(n - 2)
        return fib1 + fib2
    endif
endfunction

# –°—Ç–µ–ø–µ–Ω—å —á–∏—Å–ª–∞
global function power(base, exp) do
    if exp == 0 do
        return 1
    else
        if exp == 1 do
            return base
        else
            local prev_power = power(base, exp - 1)
            return base * prev_power
        endif
    endif
endfunction

# –°—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ n
global function sum_to_n(n) do
    if n <= 0 do
        return 0
    else
        if n == 1 do
            return 1
        else
            local prev_sum = sum_to_n(n - 1)
            return n + prev_sum
        endif
    endif
endfunction

# –ù–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å (–∞–ª–≥–æ—Ä–∏—Ç–º –ï–≤–∫–ª–∏–¥–∞)
global function gcd(a, b) do
    if b == 0 do
        return a
    else
        local remainder = a - (a / b) * b  # –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è
        return gcd(b, remainder)
    endif
endfunction

print('üßÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:')
print()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª
print('üìä –§–∞–∫—Ç–æ—Ä–∏–∞–ª:')
global fact5 = factorial(5)
global fact6 = factorial(6)
print('factorial(5) =', fact5)
print('factorial(6) =', fact6)
print()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –§–∏–±–æ–Ω–∞—á—á–∏
print('üåÄ –ß–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏:')
global fib5 = fibonacci(5)
global fib7 = fibonacci(7)
global fib8 = fibonacci(8)
print('fibonacci(5) =', fib5)
print('fibonacci(7) =', fib7)
print('fibonacci(8) =', fib8)
print()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–µ–ø–µ–Ω—å
print('‚ö° –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å:')
global pow23 = power(2, 3)
global pow34 = power(3, 4)
global pow52 = power(5, 2)
print('power(2, 3) =', pow23)
print('power(3, 4) =', pow34)
print('power(5, 2) =', pow52)
print()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—É–º–º—É
print('‚ûï –°—É–º–º–∞ —á–∏—Å–µ–ª:')
global sum5 = sum_to_n(5)
global sum10 = sum_to_n(10)
print('sum_to_n(5) =', sum5)
print('sum_to_n(10) =', sum10)
print()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ù–û–î
print('üî¢ –ù–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å:')
global gcd_result1 = gcd(48, 18)
global gcd_result2 = gcd(56, 42)
print('gcd(48, 18) =', gcd_result1)
print('gcd(56, 42) =', gcd_result2)
print()

# –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
print('üîó –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã:')
global combined1 = factorial(fibonacci(4))
global combined2 = power(factorial(3), 2)
print('factorial(fibonacci(4)) =', combined1)
print('power(factorial(3), 2) =', combined2)

print()
print('‚úÖ –í—Å–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')
print('‚ö†Ô∏è  –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ì–ª—É–±–æ–∫–∞—è —Ä–µ–∫—É—Ä—Å–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–¥–ª–µ–Ω–Ω–æ–π')
