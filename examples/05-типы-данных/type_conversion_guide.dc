# –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Ç–∏–ø–∞–º–∏ –∏ –∏—Ö –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é –≤ DataCode
# –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö

print('üîÑ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ç–∏–ø–∞–º –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è–º –≤ DataCode')
print('====================================================')
print()

# 1. –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
print('1Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:')
print('========================')

global my_number = 42
global my_float = 3.14
global my_string = 'Hello, DataCode!'
global my_bool = true
global my_array = [1, 2, 3]
global my_null = null
global my_path = path('/home/user')

print('–ß–∏—Å–ª–æ:', my_number, '- —Ç–∏–ø:', isinstance(my_number, 'number'))
print('–î—Ä–æ–±–Ω–æ–µ:', my_float, '- —Ç–∏–ø:', isinstance(my_float, 'number'))
print('–°—Ç—Ä–æ–∫–∞:', my_string, '- —Ç–∏–ø:', isinstance(my_string, 'string'))
print('–ë—É–ª–µ–≤–æ:', my_bool, '- —Ç–∏–ø:', isinstance(my_bool, 'bool'))
print('–ú–∞—Å—Å–∏–≤:', my_array, '- —Ç–∏–ø:', isinstance(my_array, 'array'))
print('Null:', my_null, '- —Ç–∏–ø:', isinstance(my_null, 'null'))
print('–ü—É—Ç—å:', my_path, '- —Ç–∏–ø:', isinstance(my_path, 'path'))
print()

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Å isinstance()
print('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Å isinstance():')
print('=================================')

global function check_type(value) do
    if isinstance(value, 'number') do
        return '–≠—Ç–æ —á–∏—Å–ª–æ'
    endif
    if isinstance(value, 'string') do
        return '–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞'
    endif
    if isinstance(value, 'bool') do
        return '–≠—Ç–æ –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ'
    endif
    if isinstance(value, 'array') do
        return '–≠—Ç–æ –º–∞—Å—Å–∏–≤'
    endif
    if isinstance(value, 'null') do
        return '–≠—Ç–æ null'
    endif
    if isinstance(value, 'path') do
        return '–≠—Ç–æ –ø—É—Ç—å'
    endif
    return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø'
endfunction

print('check_type(42):', check_type(42))
print('check_type("hello"):', check_type('hello'))
print('check_type(true):', check_type(true))
print('check_type([1,2,3]):', check_type([1, 2, 3]))
print('check_type(null):', check_type(null))
print()

# 3. –†–∞–±–æ—Ç–∞ —Å —á–∏—Å–ª–∞–º–∏
print('3Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å —á–∏—Å–ª–∞–º–∏:')
print('====================')

global int_num = 42
global float_num = 3.14

print('–¶–µ–ª–æ–µ —á–∏—Å–ª–æ:', int_num)
print('–î—Ä–æ–±–Ω–æ–µ —á–∏—Å–ª–æ:', float_num)
print('–û–±–∞ —è–≤–ª—è—é—Ç—Å—è —á–∏—Å–ª–∞–º–∏:')
print('  isinstance(int_num, "number"):', isinstance(int_num, 'number'))
print('  isinstance(float_num, "number"):', isinstance(float_num, 'number'))
print('  isinstance(int_num, "int"):', isinstance(int_num, 'int'))
print('  isinstance(float_num, "float"):', isinstance(float_num, 'float'))
print()

# 4. –†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏
print('4Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏:')
print('======================')

global text1 = '–û–±—ã—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞'
global text2 = '$100.50'  # –ú–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ –≤–∞–ª—é—Ç–∞
global text3 = '12/9/2019'  # –ú–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ –¥–∞—Ç–∞

print('–û–±—ã—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞:', text1)
print('  isinstance(text1, "string"):', isinstance(text1, 'string'))

print('–í–∞–ª—é—Ç–Ω–∞—è —Å—Ç—Ä–æ–∫–∞:', text2)
print('  isinstance(text2, "string"):', isinstance(text2, 'string'))
print('  isinstance(text2, "currency"):', isinstance(text2, 'currency'))

print('–°—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π:', text3)
print('  isinstance(text3, "string"):', isinstance(text3, 'string'))
print()

# 5. –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏
print('5Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏:')
print('======================')

global numbers = [1, 2, 3, 4, 5]
global strings = ['a', 'b', 'c']
global mixed = [1, 'hello', true, null]
global empty = []

print('–ú–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª:', numbers)
print('–ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫:', strings)
print('–°–º–µ—à–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤:', mixed)
print('–ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤:', empty)

print('–í—Å–µ —è–≤–ª—è—é—Ç—Å—è –º–∞—Å—Å–∏–≤–∞–º–∏:')
print('  isinstance(numbers, "array"):', isinstance(numbers, 'array'))
print('  isinstance(strings, "list"):', isinstance(strings, 'list'))
print('  isinstance(mixed, "array"):', isinstance(mixed, 'array'))
print('  isinstance(empty, "array"):', isinstance(empty, 'array'))
print()

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
print('6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞:')
print('==============================')

global data = [42, 'text', true, null, [1, 2]]

print('–ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö:', data)
print('–¢–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤:')
print('  data[0] (42):', isinstance(data[0], 'number'))
print('  data[1] ("text"):', isinstance(data[1], 'string'))
print('  data[2] (true):', isinstance(data[2], 'bool'))
print('  data[3] (null):', isinstance(data[3], 'null'))
print('  data[4] ([1,2]):', isinstance(data[4], 'array'))
print()

# 7. –£—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–æ–≤
print('7Ô∏è‚É£ –£—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–æ–≤:')
print('===================================')

global function process_value(val) do
    if isinstance(val, 'number') do
        print('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —á–∏—Å–ª–æ:', val)
        return val * 2
    endif
    
    if isinstance(val, 'string') do
        print('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Ç—Ä–æ–∫—É:', val)
        return val + ' (–æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ)'
    endif
    
    if isinstance(val, 'bool') do
        print('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ:', val)
        if val do
            return '–ò—Å—Ç–∏–Ω–∞'
        else
            return '–õ–æ–∂—å'
        endif
    endif
    
    if isinstance(val, 'array') do
        print('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –º–∞—Å—Å–∏–≤:', val)
        return length(val)
    endif
    
    if isinstance(val, 'null') do
        print('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é null –∑–Ω–∞—á–µ–Ω–∏–µ')
        return '–ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'
    endif
    
    return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø'
endfunction

print('–ü—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:')
global result1 = process_value(10)
print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result1)

global result2 = process_value('hello')
print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result2)

global result3 = process_value(true)
print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result3)

global result4 = process_value([1, 2, 3, 4])
print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result4)

global result5 = process_value(null)
print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result5)
print()

# 8. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞ —Ç–∏–ø–æ–≤
print('8Ô∏è‚É£ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞ —Ç–∏–ø–æ–≤:')
print('==============================')

global test_val = 42

print('–ß–∏—Å–ª–æ 42 –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏:')
print('  isinstance(test_val, "number"):', isinstance(test_val, 'number'))
print('  isinstance(test_val, "int"):', isinstance(test_val, 'int'))
print('  isinstance(test_val, "integer"):', isinstance(test_val, 'integer'))

global test_str = 'hello'
print('–°—Ç—Ä–æ–∫—É –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫:')
print('  isinstance(test_str, "string"):', isinstance(test_str, 'string'))
print('  isinstance(test_str, "str"):', isinstance(test_str, 'str'))

global test_arr = [1, 2, 3]
print('–ú–∞—Å—Å–∏–≤ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫:')
print('  isinstance(test_arr, "array"):', isinstance(test_arr, 'array'))
print('  isinstance(test_arr, "list"):', isinstance(test_arr, 'list'))
print()

print('‚úÖ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
print('–§—É–Ω–∫—Ü–∏—è isinstance() - –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –≤ DataCode')
print('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—ë –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–¥—ë–∂–Ω–æ–≥–æ –∏ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∫–æ–¥–∞!')
