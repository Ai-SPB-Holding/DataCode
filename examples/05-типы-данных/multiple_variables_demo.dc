# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ü–∏–∫–ª–∞—Ö for
# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: for i, data in enum(...) do

print('üîÑ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ü–∏–∫–ª–∞—Ö for')
print('======================================================')
print()

# 1. –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–º–µ—Ä - –∫–∞–∫ –≤ –≤–∞—à–µ–º –∑–∞–ø—Ä–æ—Å–µ
print('1Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–º–µ—Ä: for i, data in enum(array)')
print('===============================================')

global customer_numbers = [1001, 1002, 'invalid', 1004, '1005x']
print('–î–∞–Ω–Ω—ã–µ CustomerNo:', customer_numbers)
print()

print('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Å –ø–æ–º–æ—â—å—é for i, data in enum():')
for i, data in enum(customer_numbers) do
    if not isinstance(data, 'number') do
        print('–°—Ç—Ä–æ–∫–∞', i, ': –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π CustomerNo =', data)
    else
        print('–°—Ç—Ä–æ–∫–∞', i, ': –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π CustomerNo =', data)
    endif
forend
print()

# 2. –†–∞–±–æ—Ç–∞ —Å –ø–∞—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
print('2Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å –ø–∞—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö')
print('==========================')

global pairs = [[10, 'ten'], [20, 'twenty'], [30, 'thirty']]
print('–ü–∞—Ä—ã —á–∏—Å–µ–ª –∏ —Å–ª–æ–≤:', pairs)

print('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –ø–∞—Ä:')
for number, word in pairs do
    print('–ß–∏—Å–ª–æ:', number, '-> –°–ª–æ–≤–æ:', word)
forend
print()

# 3. –†–∞–±–æ—Ç–∞ —Å —Ç—Ä–æ–π–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
print('3. –†–∞–±–æ—Ç–∞ —Å —Ç—Ä–æ–π–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö')
print('===========================')

global students = [['Alice', 85, 'A'], ['Bob', 92, 'A+'], ['Charlie', 78, 'B+']]

print('–î–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: [–∏–º—è, –±–∞–ª–ª, –æ—Ü–µ–Ω–∫–∞]')
for name, score, grade in students do
    print('–°—Ç—É–¥–µ–Ω—Ç:', name, '| –ë–∞–ª–ª:', score, '| –û—Ü–µ–Ω–∫–∞:', grade)

    if score >= 90 do
        print('  -> –û—Ç–ª–∏—á–Ω–∏–∫!')
    else
        if score >= 80 do
            print('  -> –•–æ—Ä–æ—à–∏—Å—Ç')
        else
            print('  -> –ù—É–∂–Ω–æ –ø–æ–¥—Ç—è–Ω—É—Ç—å—Å—è')
        endif
    endif
forend
print()

# 4. –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ enum —Å isinstance
print('4Ô∏è‚É£ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ enum —Å isinstance')
print('===================================')

global mixed_data = [42, 'hello', true, null, 3.14]
print('–°–º–µ—à–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', mixed_data)

print('–ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–æ–≤ –ø–æ –ø–æ–∑–∏—Ü–∏—è–º:')
for position, value in enum(mixed_data) do
    if isinstance(value, 'number') do
        print('–ü–æ–∑–∏—Ü–∏—è', position, ': –ß–∏—Å–ª–æ =', value)
    else
        if isinstance(value, 'string') do
            print('–ü–æ–∑–∏—Ü–∏—è', position, ': –°—Ç—Ä–æ–∫–∞ =', value)
        else
            if isinstance(value, 'bool') do
                print('–ü–æ–∑–∏—Ü–∏—è', position, ': –ë—É–ª–µ–≤–æ =', value)
            else
                if isinstance(value, 'null') do
                    print('–ü–æ–∑–∏—Ü–∏—è', position, ': Null –∑–Ω–∞—á–µ–Ω–∏–µ')
                else
                    print('–ü–æ–∑–∏—Ü–∏—è', position, ': –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø =', value)
                endif
            endif
        endif
    endif
forend
print()

# 5. –°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
print('5Ô∏è‚É£ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏')
print('===============================================')

global sales_data = [
    ['January', 1000, 15],
    ['February', 1200, 18],
    ['March', 800, 12]
]

global total_sales = 0
global total_customers = 0
global best_month = ''
global best_sales = 0

print('–î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂: [–º–µ—Å—è—Ü, –ø—Ä–æ–¥–∞–∂–∏, –∫–ª–∏–µ–Ω—Ç—ã]')
for month, sales, customers in sales_data do
    print('–ú–µ—Å—è—Ü:', month, '| –ü—Ä–æ–¥–∞–∂–∏:', sales, '| –ö–ª–∏–µ–Ω—Ç—ã:', customers)
    
    global total_sales = total_sales + sales
    global total_customers = total_customers + customers
    
    if sales > best_sales do
        global best_sales = sales
        global best_month = month
    endif
forend

print()
print('–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
print('  –û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏:', total_sales)
print('  –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤:', total_customers)
print('  –õ—É—á—à–∏–π –º–µ—Å—è—Ü:', best_month, '—Å –ø—Ä–æ–¥–∞–∂–∞–º–∏:', best_sales)
print()

# 6. –†–∞–±–æ—Ç–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
print('6Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏')
print('========================')

global points = [[0, 0], [3, 4], [6, 8], [1, 1]]
print('–¢–æ—á–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:', points)

print('–†–∞—Å—á–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –æ—Ç –Ω–∞—á–∞–ª–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:')
for x, y in points do
    global distance = (x * x + y * y) ^ 0.5
    print('–¢–æ—á–∫–∞ (', x, ',', y, ') -> –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:', distance)
forend
print()

# 7. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
print('7Ô∏è‚É£ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö')
print('=============================================================')

global wrong_data = [[1, 2], [3], [4, 5, 6]]
print('–î–∞–Ω–Ω—ã–µ —Å —Ä–∞–∑–Ω–æ–π –¥–ª–∏–Ω–æ–π –º–∞—Å—Å–∏–≤–æ–≤:', wrong_data)

print('–ü–æ–ø—ã—Ç–∫–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –≤ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:')
global processed_count = 0

for item in wrong_data do
    global item_length = length(item)
    
    if item_length == 2 do
        # –ú–æ–∂–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å
        global first = item[0]
        global second = item[1]
        print('–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:', first, ',', second)
        global processed_count = processed_count + 1
    else
        print('–ü—Ä–æ–ø—É—â–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã:', item, '(–¥–ª–∏–Ω–∞:', item_length, ')')
    endif
forend

print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', processed_count, '–∏–∑', length(wrong_data))
print()

# 8. –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
print('8Ô∏è‚É£ –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏')
print('===============================================')

global matrix = [
    [[1, 'a'], [2, 'b']],
    [[3, 'c'], [4, 'd']]
]

print('–ú–∞—Ç—Ä–∏—Ü–∞ –ø–∞—Ä:', matrix)
print('–û–±—Ö–æ–¥ –º–∞—Ç—Ä–∏—Ü—ã:')

for row_idx, row in enum(matrix) do
    print('–°—Ç—Ä–æ–∫–∞', row_idx, ':')
    
    for col_idx, pair in enum(row) do
        for number, letter in [pair] do
            print('  [', row_idx, ',', col_idx, '] =', number, ',', letter)
        forend
    forend
forend
print()

# 9. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä: –æ–±—Ä–∞–±–æ—Ç–∫–∞ CSV-–ø–æ–¥–æ–±–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
print('9Ô∏è‚É£ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä: –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
print('==================================================')

global csv_data = [
    ['Name', 'Age', 'City'],
    ['Alice', 25, 'New York'],
    ['Bob', 30, 'London'],
    ['Charlie', 35, 'Tokyo']
]

print('CSV-–ø–æ–¥–æ–±–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:')
for row_num, row in enum(csv_data) do
    if row_num == 0 do
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        for col_num, header in enum(row) do
            print('–ö–æ–ª–æ–Ω–∫–∞', col_num, ':', header)
        forend
        print('---')
    else
        # –î–∞–Ω–Ω—ã–µ
        for name, age, city in [row] do
            print('–ó–∞–ø–∏—Å—å', row_num, ':', name, '(', age, '–ª–µ—Ç) –∏–∑', city)
        forend
    endif
forend
print()

print('‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
print('–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Ü–∏–∫–ª–∞—Ö for –ø–æ–∑–≤–æ–ª—è—é—Ç:')
print('  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—Ç—å –º–∞—Å—Å–∏–≤—ã')
print('  ‚Ä¢ –†–∞–±–æ—Ç–∞—Ç—å —Å enum() –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ')
print('  ‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
print('  ‚Ä¢ –ü–∏—Å–∞—Ç—å –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–π –∫–æ–¥')
print('  ‚Ä¢ –ò–∑–±–µ–≥–∞—Ç—å —Ä—É—á–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è')
