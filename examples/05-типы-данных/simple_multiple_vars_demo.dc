# Простая демонстрация множественных переменных в циклах for
# Поддержка синтаксиса: for i, data in enum(...) do

print('Демонстрация множественных переменных в циклах for')
print('==================================================')
print()

# 1. Основной пример - как в вашем запросе
print('1. Основной пример: for i, data in enum(array)')
print('==============================================')

global customer_numbers = [1001, 1002, 'invalid', 1004, '1005x']
print('Данные CustomerNo:', customer_numbers)
print()

print('Проверка типов с помощью for i, data in enum():')
for i, data in enum(customer_numbers) do
    if not isinstance(data, 'number') do
        print('Строка', i, ': Некорректный CustomerNo =', data)
    else
        print('Строка', i, ': Корректный CustomerNo =', data)
    endif
forend
print()

# 2. Работа с парами данных
print('2. Работа с парами данных')
print('=========================')

global pairs = [[10, 'ten'], [20, 'twenty'], [30, 'thirty']]
print('Пары чисел и слов:', pairs)

print('Распаковка пар:')
for number, word in pairs do
    print('Число:', number, '-> Слово:', word)
forend
print()

# 3. Работа с тройками данных
print('3. Работа с тройками данных')
print('===========================')

global students = [['Alice', 85, 'A'], ['Bob', 92, 'A+'], ['Charlie', 78, 'B+']]

print('Данные студентов: [имя, балл, оценка]')
for name, score, grade in students do
    print('Студент:', name, '| Балл:', score, '| Оценка:', grade)
forend
print()

# 4. Комбинирование enum с isinstance
print('4. Комбинирование enum с isinstance')
print('===================================')

global mixed_data = [42, 'hello', true, null, 3.14]
print('Смешанные данные:', mixed_data)

print('Анализ типов по позициям:')
for position, value in enum(mixed_data) do
    if isinstance(value, 'number') do
        print('Позиция', position, ': Число =', value)
    else
        if isinstance(value, 'string') do
            print('Позиция', position, ': Строка =', value)
        else
            if isinstance(value, 'bool') do
                print('Позиция', position, ': Булево =', value)
            else
                if isinstance(value, 'null') do
                    print('Позиция', position, ': Null значение')
                else
                    print('Позиция', position, ': Неизвестный тип =', value)
                endif
            endif
        endif
    endif
forend
print()

# 5. Сбор статистики
print('5. Сбор статистики с множественными переменными')
print('===============================================')

global sales_data = [['January', 1000, 15], ['February', 1200, 18], ['March', 800, 12]]

global total_sales = 0
global total_customers = 0

print('Данные продаж: [месяц, продажи, клиенты]')
for month, sales, customers in sales_data do
    print('Месяц:', month, '| Продажи:', sales, '| Клиенты:', customers)
    
    global total_sales = total_sales + sales
    global total_customers = total_customers + customers
forend

print()
print('Итоговая статистика:')
print('  Общие продажи:', total_sales)
print('  Общее количество клиентов:', total_customers)
print()

# 6. Работа с координатами
print('6. Работа с координатами')
print('========================')

global points = [[0, 0], [3, 4], [6, 8], [1, 1]]
print('Точки координат:', points)

print('Расчет расстояний от начала координат:')
for x, y in points do
    global distance_squared = x * x + y * y
    print('Точка (', x, ',', y, ') -> Расстояние^2:', distance_squared)
forend
print()

# 7. Проверка старого синтаксиса
print('7. Проверка совместимости со старым синтаксисом')
print('===============================================')

global numbers = [10, 20, 30, 40]
global sum_old = 0

print('Старый синтаксис (одна переменная):')
for num in numbers do
    print('Число:', num)
    global sum_old = sum_old + num
forend

print('Сумма:', sum_old)
print()

print('Демонстрация завершена!')
print('Множественные переменные в циклах for позволяют:')
print('  • Автоматически распаковывать массивы')
print('  • Работать с enum() более удобно')
print('  • Обрабатывать структурированные данные')
print('  • Писать более читаемый код')
