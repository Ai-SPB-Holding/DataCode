# DataCode Stress Benchmark - –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
# –≠—Ç–æ—Ç –±–µ–Ω—á–º–∞—Ä–∫ —Å–æ–∑–¥–∞–Ω –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞

print("üî• DataCode Stress Benchmark - –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ!")
print("============================================================")

# 1. –ú–ê–°–°–ò–í–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –î–ê–ù–ù–´–•
print("üìä –¢–µ—Å—Ç 1: –ú–∞—Å—Å–∏–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
global massive_data = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
global counter = 10

print("–°–æ–∑–¥–∞–Ω –º–∞—Å—Å–∏–≤ –∏–∑", counter, "—ç–ª–µ–º–µ–Ω—Ç–æ–≤")

# 2. –ü–†–û–°–¢–´–ï –í–´–ß–ò–°–õ–ï–ù–ò–Ø
print("üìã –¢–µ—Å—Ç 2: –ü—Ä–æ—Å—Ç—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è")
global a = 10
global b = 20
global c = a + b
global d = a * b
global e = sqrt(a * a + b * b)

print("–í—ã–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–æ—Å—Ç—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è:", c, d, e)

# 3. –ú–ê–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –û–ü–ï–†–ê–¶–ò–ò
print("üßÆ –¢–µ—Å—Ç 3: –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è")
global complex_calc1 = sqrt(1 * 1 + 100)
global complex_calc2 = sqrt(4 * 4 + 100)
global complex_calc3 = sqrt(9 * 9 + 100)
global power_calc1 = pow(2, 2) + pow(2, 3) / 1000
global power_calc2 = pow(3, 2) + pow(3, 3) / 1000
global math_results = [complex_calc1, complex_calc2, complex_calc3, power_calc1, power_calc2]
global math_counter = 5

print("–í—ã–ø–æ–ª–Ω–µ–Ω–æ", math_counter, "–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")

# 4. –°–¢–†–û–ö–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò
print("üìù –¢–µ—Å—Ç 4: –°—Ç—Ä–æ–∫–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
global text_data = "DataCode Performance Test String"
global upper_text = upper(text_data)
global lower_text = lower(text_data)
global final_text1 = upper_text + " | " + lower_text + " [1]"
global final_text2 = upper_text + " | " + lower_text + " [2]"
global processed_strings = [final_text1, final_text2]
global string_counter = 2

print("–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ", string_counter, "—Å—Ç—Ä–æ–∫")

# 5. –§–ê–ô–õ–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò
print("üíæ –¢–µ—Å—Ç 5: –§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
global current_dir = getcwd()
global files_list = list_files(current_dir)
print("–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:", current_dir)
print("–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")

# 6. –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢
print("üöÄ –¢–µ—Å—Ç 6: –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç")
global temp1 = 1 * 1 + sqrt(1 + 1)
global temp2 = 2 * 2 + sqrt(2 + 2)
global temp3 = 3 * 3 + sqrt(3 + 3)
global final_computation = temp1 + temp2 + temp3

print("–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–π:", final_computation)

# –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
print("============================================================")
print("‚úÖ –°–¢–†–ï–°–°-–¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
print("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
print("- –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞:", counter)
print("- –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:", math_counter)
print("- –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫:", string_counter)
print("- –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:", final_computation)
print("============================================================")
print("üéØ –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–µ—Ä–∂–∞–ª —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç!")
