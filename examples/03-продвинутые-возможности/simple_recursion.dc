# –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã —Ä–µ–∫—É—Ä—Å–∏–∏ –≤ DataCode (–±–µ–∑ —É—Å–ª–æ–≤–∏–π)
print('üîÑ –ü—Ä–æ—Å—Ç—ã–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏')
print('===============================')

# –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
global function countdown(n) do
    print('Countdown:', n)
    # –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π - –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    return n
endfunction

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—É–º–º—ã (–±–µ–∑ —Ä–µ–∫—É—Ä—Å–∏–∏ –ø–æ–∫–∞)
global function simple_sum(a, b) do
    return a + b
endfunction

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å (–∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è)
global function power_simple(base, exp) do
    local result = 1
    # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è exp = 2
    local result2 = base * base
    return result2
endfunction

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è)
global function factorial_simple(n) do
    # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã—á–∏—Å–ª–∏–º —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª
    local result = 1
    # –î–ª—è n = 3: 3! = 6
    # –î–ª—è n = 4: 4! = 24
    # –î–ª—è n = 5: 5! = 120
    return 120  # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è n = 5
endfunction

print('üßÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:')
print()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
global countdown_result = countdown(5)
global sum_result = simple_sum(10, 15)
global power_result = power_simple(3, 2)
global factorial_result = factorial_simple(5)

print('countdown(5) =', countdown_result)
print('simple_sum(10, 15) =', sum_result)
print('power_simple(3, 2) =', power_result)
print('factorial_simple(5) =', factorial_result)
print()

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
print('üîó –í–ª–æ–∂–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π:')
global nested_result1 = simple_sum(power_simple(2, 2), factorial_simple(3))
global nested_result2 = power_simple(simple_sum(1, 2), 2)

print('simple_sum(power_simple(2, 2), factorial_simple(3)) =', nested_result1)
print('power_simple(simple_sum(1, 2), 2) =', nested_result2)
print()

# –§—É–Ω–∫—Ü–∏–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
print('üîí –§—É–Ω–∫—Ü–∏–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏:')

global function complex_calc(x, y) do
    local temp1 = x * 2
    local temp2 = y + 5
    local result = temp1 + temp2
    return result
endfunction

global function string_builder(prefix, suffix) do
    local middle = ' - '
    local result = prefix + middle + suffix
    return result
endfunction

global complex_result = complex_calc(10, 20)
global string_result = string_builder('Hello', 'World')

print('complex_calc(10, 20) =', complex_result)
print('string_builder("Hello", "World") =', string_result)
print()

# –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
print('üìê –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:')

global function circle_area(radius) do
    local pi = 3.14159
    local area = pi * radius * radius
    return area
endfunction

global function rectangle_area(width, height) do
    return width * height
endfunction

global function triangle_area(base, height) do
    local area = base * height / 2
    return area
endfunction

global circle_result = circle_area(5)
global rectangle_result = rectangle_area(4, 6)
global triangle_result = triangle_area(8, 3)

print('circle_area(5) =', circle_result)
print('rectangle_area(4, 6) =', rectangle_result)
print('triangle_area(8, 3) =', triangle_result)
print()

print('‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')
print('üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü–æ–ª–Ω–∞—è —Ä–µ–∫—É—Ä—Å–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —É—Å–ª–æ–≤–∏–π')
print('üîÑ –ü–æ–∫–∞ —á—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–π')
